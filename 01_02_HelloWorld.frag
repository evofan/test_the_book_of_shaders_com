#ifdef GL_ES// ★（５）プリプロセッサマクロ（C言語的）、GL_ES（モバイルやブラウザ向け）が定義されている時にだけ2行目のコードを使用する
precision mediump float;// ★（６）全ての浮動小数点型に中レベルの精度を指定（より低い：precision lowp float; より高い：precision highp float;）低いと速度は上がる
#endif

uniform float u_time;

// ★（１）シェーダー言語は結果を返すメイン関数（この場合色を返す）を持つ、main()が無いとエラー
void main(){
    // ★（２）最終的なピクセルの色は、グローバル変数（gl_FragColor）に色を割り当て、※gl_FragColorはGLSL1.3から非推奨になった
    gl_FragColor=vec4(0.,.5,.5,1.);// ★（３）「変数」「関数」と合わせて「型」を持つ、浮動小数点精度を持つ4次元ベクトル vec4型(R、G、B、alpha)
    // ★（４）値が正規化（normalized）されている＝0.0～1.0の値を取る→後で変数間の写像に便利
    // ★（７）コードの一貫性を保つ為に浮動小数点の値には小数点（.）を使う、0→0.0、1→1.0、※自動的な型変換は最低限の仕様に含まれないので、
    // 小数点を指定して無いと動かないカードが出て来る→glslCanvasでエラー
    
    // gl_FragColor = vec4(vec3(1.0,0.0,1.0),1.0); // 別の記載方法
}

/* 動かない、呼び出し方が？
vec4 red(){
    return vec4(1.0,0.0,0.0,1.0);
}
*/
